{"version":3,"file":"module.js","sources":["../src/type.ts","../src/WebCanvas.ts","../src/GLCapability.ts","../src/GLExtensions.ts","../src/GLPrimitive.ts","../src/GLTexture.ts","../src/GLRenderColorTexture.ts","../src/GLRenderDepthTexture.ts","../src/GLRenderStates.ts","../src/GLRenderTarget.ts","../src/GLTexture2D.ts","../src/GLTextureCubeMap.ts","../src/WebGLRenderer.ts","../src/WebGLEngine.ts"],"sourcesContent":["/**\n * Smoothing plug-in.\n * */\nexport interface WebGLExtension {\n  MAX_DRAW_BUFFERS: GLenum;\n  UNSIGNED_INT_24_8: GLenum;\n  MAX_SAMPLES: GLenum;\n  RGBA8: GLenum;\n  RGBA16F: GLenum;\n  RGBA32F: GLenum;\n  DEPTH_COMPONENT32F: GLenum;\n  READ_FRAMEBUFFER: GLenum;\n  DRAW_FRAMEBUFFER: GLenum;\n\n  createVertexArray(): WebGLVertexArrayObject | null;\n  deleteVertexArray(vertexArray: WebGLVertexArrayObject | null): void;\n  isVertexArray(vertexArray: WebGLVertexArrayObject | null): GLboolean;\n  bindVertexArray(array: WebGLVertexArrayObject | null): void;\n\n  renderbufferStorageMultisample(\n    target: GLenum,\n    samples: GLsizei,\n    internalformat: GLenum,\n    width: GLsizei,\n    height: GLsizei\n  ): void;\n  blitFramebuffer(\n    srcX0: GLint,\n    srcY0: GLint,\n    srcX1: GLint,\n    srcY1: GLint,\n    dstX0: GLint,\n    dstY0: GLint,\n    dstX1: GLint,\n    dstY1: GLint,\n    mask: GLbitfield,\n    filter: GLenum\n  ): void;\n\n  drawArraysInstanced(mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei): void;\n  drawElementsInstanced(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr, instanceCount: GLsizei): void;\n  vertexAttribDivisor(index: GLuint, divisor: GLuint): void;\n  drawBuffers(buffers: Iterable<GLenum>): void;\n}\n\nexport interface TextureFormatDetail {\n  internalFormat: GLint;\n  baseFormat?: GLenum;\n  dataType?: GLenum;\n  isCompressed: boolean;\n  attachment?: GLenum;\n}\n\n/**\n * @deprecated\n */\nexport enum GLCompressedTextureInternalFormat {\n  // astc\n  RGBA_ASTC_4X4_KHR = 0x93b0,\n  RGBA_ASTC_5X4_KHR = 0x93b1,\n  RGBA_ASTC_5X5_KHR = 0x93b2,\n  RGBA_ASTC_6X5_KHR = 0x93b3,\n  RGBA_ASTC_6X6_KHR = 0x93b4,\n  RGBA_ASTC_8X5_KHR = 0x93b5,\n  RGBA_ASTC_8X6_KHR = 0x93b6,\n  RGBA_ASTC_8X8_KHR = 0x93b7,\n  RGBA_ASTC_10X5_KHR = 0x93b8,\n  RGBA_ASTC_10X6_KHR = 0x93b9,\n  RGBA_ASTC_10X8_KHR = 0x93ba,\n  RGBA_ASTC_10X10_KHR = 0x93bb,\n  RGBA_ASTC_12X10_KHR = 0x93bc,\n  RGBA_ASTC_12X12_KHR = 0x93bd,\n  SRGB8_ALPHA8_ASTC_4X4_KHR = 0x93d0,\n  SRGB8_ALPHA8_ASTC_5X4_KHR = 0x93d1,\n  SRGB8_ALPHA8_ASTC_5X5_KHR = 0x93d2,\n  SRGB8_ALPHA8_ASTC_6X5_KHR = 0x93d3,\n  SRGB8_ALPHA8_ASTC_6X6_KHR = 0x93d4,\n  SRGB8_ALPHA8_ASTC_8X5_KHR = 0x93d5,\n  SRGB8_ALPHA8_ASTC_8X6_KHR = 0x93d6,\n  SRGB8_ALPHA8_ASTC_8X8_KHR = 0x93d7,\n  SRGB8_ALPHA8_ASTC_10X5_KHR = 0x93d8,\n  SRGB8_ALPHA8_ASTC_10X6_KHR = 0x93d9,\n  SRGB8_ALPHA8_ASTC_10X8_KHR = 0x93da,\n  SRGB8_ALPHA8_ASTC_10X10_KHR = 0x93db,\n  SRGB8_ALPHA8_ASTC_12X10_KHR = 0x93dc,\n  SRGB8_ALPHA8_ASTC_12X12_KHR = 0x93dd,\n\n  // etc1\n  RGB_ETC1_WEBGL = 0x8d64,\n\n  // etc2\n  R11_EAC = 0x9270,\n  SIGNED_R11_EAC = 0x9271,\n  RG11_EAC = 0x9272,\n  SIGNED_RG11_EAC = 0x9273,\n  RGB8_ETC2 = 0x9274,\n  SRGB8_ETC2 = 0x9275,\n  RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276,\n  SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277,\n  RGBA8_ETC2_EAC = 0x9278,\n  SRGB8_ALPHA8_ETC2_EAC = 0x9279,\n\n  // pvrtc\n  RGB_PVRTC_4BPPV1_IMG = 0x8c00,\n  RGB_PVRTC_2BPPV1_IMG = 0x8c01,\n  RGBA_PVRTC_4BPPV1_IMG = 0x8c02,\n  RGBA_PVRTC_2BPPV1_IMG = 0x8c03,\n\n  // s3tc\n  RGB_S3TC_DXT1_EXT = 0x83f0,\n  RGBA_S3TC_DXT1_EXT = 0x83f1,\n  RGBA_S3TC_DXT3_EXT = 0x83f2,\n  RGBA_S3TC_DXT5_EXT = 0x83f3\n}\n","import { Canvas } from \"@oasis-engine/core\";\nimport { Vector2 } from \"@oasis-engine/math\";\n\ntype OffscreenCanvas = any;\n\n/**\n * The canvas used on the web, which can support HTMLCanvasElement and OffscreenCanvas.\n */\nexport class WebCanvas implements Canvas {\n  _webCanvas: HTMLCanvasElement | OffscreenCanvas;\n\n  private _width: number;\n  private _height: number;\n  private _scale: Vector2 = new Vector2();\n\n  /**\n   * @inheritdoc\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  set width(value: number) {\n    if (this._width !== value) {\n      this._webCanvas.width = value;\n      this._width = value;\n    }\n  }\n\n  /**\n   * @inheritdoc\n   */\n  get height(): number {\n    return this._height;\n  }\n\n  set height(value: number) {\n    if (this._height !== value) {\n      this._webCanvas.height = value;\n      this._height = value;\n    }\n  }\n\n  /**\n   * The scale of canvas, the value is visible width/height divide the render width/height.\n   * @remarks Need to re-assign after modification to ensure that the modification takes effect.\n   */\n  get scale(): Vector2 {\n    const webCanvas = this._webCanvas;\n    if (webCanvas instanceof HTMLCanvasElement) {\n      this._scale.setValue(\n        (webCanvas.clientWidth * devicePixelRatio) / webCanvas.width,\n        (webCanvas.clientHeight * devicePixelRatio) / webCanvas.height\n      );\n    }\n    return this._scale;\n  }\n\n  set scale(value: Vector2) {\n    const webCanvas = this._webCanvas;\n    if (webCanvas instanceof HTMLCanvasElement) {\n      webCanvas.style.transformOrigin = `left top`;\n      webCanvas.style.transform = `scale(${value.x}, ${value.y})`;\n    }\n  }\n\n  /**\n   * Resize the rendering size according to the clientWidth and clientHeight of the canvas.\n   * @param pixelRatio - Pixel ratio\n   */\n  resizeByClientSize(pixelRatio: number = window.devicePixelRatio): void {\n    const webCanvas = this._webCanvas;\n    if (webCanvas instanceof HTMLCanvasElement) {\n      this.width = webCanvas.clientWidth * pixelRatio;\n      this.height = webCanvas.clientHeight * pixelRatio;\n    }\n  }\n\n  /**\n   * Create a web canvas.\n   * @param webCanvas - Web native canvas\n   */\n  constructor(webCanvas: HTMLCanvasElement | OffscreenCanvas) {\n    const width = webCanvas.width;\n    const height = webCanvas.height;\n    this._webCanvas = webCanvas;\n    this._width = width;\n    this._height = height;\n  }\n\n  /**\n   * Set scale.\n   * @param x - Scale along the X axis\n   * @param y - Scale along the Y axis\n   */\n  setScale(x: number, y: number): void {\n    this._scale.setValue(x, y);\n    this.scale = this._scale;\n  }\n}\n","import { GLCapabilityType } from \"@oasis-engine/core\";\nimport { GLCompressedTextureInternalFormat } from \"./type\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\ntype extensionKey = string;\n\n/**\n * GL capability.\n */\nexport class GLCapability {\n  private _maxDrawBuffers: number;\n  private _maxAnisoLevel: number;\n  private _maxAntiAliasing: number;\n\n  _rhi: WebGLRenderer;\n  capabilityList: Map<GLCapabilityType, boolean>;\n\n  get canUseFloatTextureBlendShape(): boolean {\n    return (\n      this.canIUse(GLCapabilityType.shaderVertexID) &&\n      this.canIUse(GLCapabilityType.textureFloat) &&\n      this.rhi.renderStates.getParameter(this.rhi.gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0\n    );\n  }\n\n  /**\n   * Whether can use more joints.\n   */\n  get canIUseMoreJoints(): boolean {\n    return (\n      this.canIUse(GLCapabilityType.textureFloat) &&\n      this.rhi.renderStates.getParameter(this.rhi.gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0\n    );\n  }\n\n  get maxDrawBuffers() {\n    if (!this._maxDrawBuffers) {\n      if (this.canIUse(GLCapabilityType.drawBuffers)) {\n        this._maxDrawBuffers = this._rhi.gl.getParameter(this._rhi.gl.MAX_DRAW_BUFFERS);\n      } else {\n        this._maxDrawBuffers = 1;\n      }\n    }\n    return this._maxDrawBuffers;\n  }\n\n  /**\n   * Max anisoLevel.\n   */\n  get maxAnisoLevel(): number {\n    if (!this._maxAnisoLevel) {\n      const ext = this._rhi.requireExtension(GLCapabilityType.textureFilterAnisotropic);\n      this._maxAnisoLevel = ext ? this._rhi.gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1;\n    }\n    return this._maxAnisoLevel;\n  }\n\n  /**\n   * Max MSAA count.\n   */\n  get maxAntiAliasing(): number {\n    if (!this._maxAntiAliasing) {\n      const gl = this._rhi.gl;\n      const canMSAA = this.canIUse(GLCapabilityType.multipleSample);\n\n      this._maxAntiAliasing = canMSAA ? gl.getParameter(gl.MAX_SAMPLES) : 1;\n    }\n    return this._maxAntiAliasing;\n  }\n\n  get rhi() {\n    return this._rhi;\n  }\n\n  constructor(rhi: WebGLRenderer) {\n    this._rhi = rhi;\n    this.capabilityList = new Map();\n\n    this._init();\n    this._compatibleAllInterface();\n  }\n\n  /**\n   * Check device capabilities.\n   */\n  canIUse(capabilityType: GLCapabilityType): boolean {\n    return this.capabilityList.get(capabilityType);\n  }\n\n  /**\n   * Check if can use some compressed texture format.\n   */\n  canIUseCompressedTextureInternalFormat(internalType: GLCompressedTextureInternalFormat): boolean {\n    const {\n      // astc\n      RGBA_ASTC_4X4_KHR,\n      RGBA_ASTC_12X12_KHR,\n      SRGB8_ALPHA8_ASTC_4X4_KHR,\n      SRGB8_ALPHA8_ASTC_12X12_KHR,\n      // etc1\n      RGB_ETC1_WEBGL,\n      // etc\n      R11_EAC,\n      SRGB8_ALPHA8_ETC2_EAC,\n      // pvrtc\n      RGB_PVRTC_4BPPV1_IMG,\n      RGBA_PVRTC_2BPPV1_IMG,\n      // s3tc\n      RGB_S3TC_DXT1_EXT,\n      RGBA_S3TC_DXT5_EXT\n    } = GLCompressedTextureInternalFormat;\n    if (\n      (internalType >= RGBA_ASTC_4X4_KHR && RGBA_ASTC_12X12_KHR <= RGBA_ASTC_12X12_KHR) ||\n      (internalType >= SRGB8_ALPHA8_ASTC_4X4_KHR && internalType <= SRGB8_ALPHA8_ASTC_12X12_KHR)\n    ) {\n      return this.canIUse(GLCapabilityType.astc);\n    } else if (internalType === RGB_ETC1_WEBGL) {\n      return this.canIUse(GLCapabilityType.etc1);\n    } else if (internalType >= R11_EAC && internalType <= SRGB8_ALPHA8_ETC2_EAC) {\n      return this.canIUse(GLCapabilityType.etc);\n    } else if (internalType >= RGB_PVRTC_4BPPV1_IMG && internalType <= RGBA_PVRTC_2BPPV1_IMG) {\n      return this.canIUse(GLCapabilityType.pvrtc);\n    } else if (internalType >= RGB_S3TC_DXT1_EXT && internalType <= RGBA_S3TC_DXT5_EXT) {\n      return this.canIUse(GLCapabilityType.s3tc);\n    }\n    return false;\n  }\n\n  /**\n   *  Init capabilities.\n   */\n  private _init() {\n    const cap = this.capabilityList;\n    const { isWebGL2 } = this.rhi;\n    const requireExtension = this.rhi.requireExtension.bind(this.rhi);\n\n    const {\n      shaderVertexID,\n      standardDerivatives,\n      shaderTextureLod,\n      elementIndexUint,\n      depthTexture,\n      vertexArrayObject,\n      instancedArrays,\n      multipleSample,\n      drawBuffers,\n\n      astc,\n      astc_webkit,\n      etc,\n      etc_webkit,\n      etc1,\n      etc1_webkit,\n      pvrtc,\n      pvrtc_webkit,\n      s3tc,\n      s3tc_webkit,\n\n      textureFloat,\n      textureHalfFloat,\n      textureFloatLinear,\n      textureHalfFloatLinear,\n      WEBGL_colorBufferFloat,\n      colorBufferFloat,\n      colorBufferHalfFloat,\n      textureFilterAnisotropic\n    } = GLCapabilityType;\n    cap.set(shaderVertexID, isWebGL2);\n    cap.set(standardDerivatives, isWebGL2 || !!requireExtension(standardDerivatives));\n    cap.set(shaderTextureLod, isWebGL2 || !!requireExtension(shaderTextureLod));\n    cap.set(elementIndexUint, isWebGL2 || !!requireExtension(elementIndexUint));\n    cap.set(depthTexture, isWebGL2 || !!requireExtension(depthTexture));\n    cap.set(vertexArrayObject, isWebGL2 || !!requireExtension(vertexArrayObject));\n    cap.set(instancedArrays, isWebGL2 || !!requireExtension(instancedArrays));\n    cap.set(multipleSample, isWebGL2);\n    cap.set(drawBuffers, isWebGL2 || !!requireExtension(drawBuffers));\n    cap.set(textureFloat, isWebGL2 || !!requireExtension(textureFloat));\n    cap.set(textureHalfFloat, isWebGL2 || !!requireExtension(textureHalfFloat));\n    cap.set(textureFloatLinear, !!requireExtension(textureFloatLinear));\n    cap.set(textureHalfFloatLinear, isWebGL2 || !!requireExtension(textureHalfFloatLinear));\n    cap.set(\n      colorBufferFloat,\n      (isWebGL2 && !!requireExtension(colorBufferFloat)) || !!requireExtension(WEBGL_colorBufferFloat)\n    );\n    cap.set(\n      colorBufferHalfFloat,\n      (isWebGL2 && !!requireExtension(colorBufferFloat)) || !!requireExtension(colorBufferHalfFloat)\n    );\n    cap.set(textureFilterAnisotropic, !!requireExtension(textureFilterAnisotropic));\n\n    cap.set(astc, !!(requireExtension(astc) || requireExtension(astc_webkit)));\n    cap.set(etc, !!(requireExtension(etc) || requireExtension(etc_webkit)));\n    cap.set(etc1, !!(requireExtension(etc1) || requireExtension(etc1_webkit)));\n    cap.set(pvrtc, !!(requireExtension(pvrtc) || requireExtension(pvrtc_webkit)));\n    cap.set(s3tc, !!(requireExtension(s3tc) || requireExtension(s3tc_webkit)));\n  }\n\n  /**\n   * If there are extensions that can supplement this ability, smooth out the difference.\n   * @example\n   * compatible(GLCapabilityType.depthTexture,{\n   *    UNSIGNED_INT_24_8: \"UNSIGNED_INT_24_8_WEBGL\"\n   * })\n   * gl.UNSIGNED_INT_24_8 = ext.UNSIGNED_INT_24_8_WEBGL\n   */\n  private _compatibleInterface(capabilityType: GLCapabilityType, flatItem: { [glKey: string]: extensionKey }) {\n    const rhi = this.rhi;\n    const gl = rhi.gl;\n    let ext = null;\n\n    if ((ext = rhi.requireExtension(capabilityType))) {\n      for (let glKey in flatItem) {\n        const extensionKey = flatItem[glKey];\n        const extensionVal = ext[extensionKey];\n\n        // Mini game hack the native function,use “.bind” to smooth out if is “Funcion”.\n        if (extensionVal?.bind) {\n          gl[glKey] = extensionVal.bind(ext);\n        } else {\n          gl[glKey] = extensionVal;\n        }\n      }\n    }\n  }\n\n  private _compatibleAllInterface() {\n    const {\n      depthTexture,\n      vertexArrayObject,\n      instancedArrays,\n      drawBuffers,\n      textureFilterAnisotropic,\n      textureHalfFloat,\n      colorBufferHalfFloat,\n      WEBGL_colorBufferFloat\n    } = GLCapabilityType;\n    const { isWebGL2 } = this.rhi;\n\n    if (!isWebGL2) {\n      this._compatibleInterface(depthTexture, {\n        UNSIGNED_INT_24_8: \"UNSIGNED_INT_24_8_WEBGL\"\n      });\n      this._compatibleInterface(vertexArrayObject, {\n        createVertexArray: \"createVertexArrayOES\",\n        deleteVertexArray: \"deleteVertexArrayOES\",\n        isVertexArray: \"isVertexArrayOES\",\n        bindVertexArray: \"bindVertexArrayOES\"\n      });\n      this._compatibleInterface(instancedArrays, {\n        drawArraysInstanced: \"drawArraysInstancedANGLE\",\n        drawElementsInstanced: \"drawElementsInstancedANGLE\",\n        vertexAttribDivisor: \"vertexAttribDivisorANGLE\"\n      });\n      this._compatibleInterface(drawBuffers, {\n        MAX_DRAW_BUFFERS: \"MAX_DRAW_BUFFERS_WEBGL\"\n      });\n      const items = {};\n      if (this.canIUse(GLCapabilityType.drawBuffers)) {\n        const maxDrawBuffers = this.maxDrawBuffers;\n        for (let i = 0; i < maxDrawBuffers; i++) {\n          i != 0 && (items[`COLOR_ATTACHMENT${i}`] = `COLOR_ATTACHMENT${i}_WEBGL`);\n          items[`DRAW_BUFFER${i}`] = `DRAW_BUFFER${i}_WEBGL`;\n        }\n        this._compatibleInterface(drawBuffers, {\n          drawBuffers: \"drawBuffersWEBGL\",\n          ...items\n        });\n      }\n      this._compatibleInterface(textureHalfFloat, {\n        HAFL_FLOAT: \"HALF_FLOAT_OES\"\n      });\n      this._compatibleInterface(colorBufferHalfFloat, {\n        RGBA16F: \"RBGA16F_EXT\"\n      });\n      this._compatibleInterface(WEBGL_colorBufferFloat, {\n        RGBA32F: \"RBGA32F_EXT\"\n      });\n    }\n\n    this._compatibleInterface(textureFilterAnisotropic, {\n      TEXTURE_MAX_ANISOTROPY_EXT: \"TEXTURE_MAX_ANISOTROPY_EXT\"\n    });\n  }\n}\n","import { WebGLRenderer } from \"./WebGLRenderer\";\nimport { GLCapabilityType } from \"@oasis-engine/core\";\n\n/**\n * GLContext extension.\n */\nexport class GLExtensions {\n  private rhi: WebGLRenderer;\n  private _requireResult;\n\n  constructor(rhi: WebGLRenderer) {\n    this.rhi = rhi;\n    this._requireResult = {};\n  }\n\n  /**\n   * Require an extension.\n   */\n  requireExtension(ext: GLCapabilityType) {\n    if (this._requireResult[ext] !== undefined) {\n      return this._requireResult[ext];\n    }\n\n    this._requireResult[ext] = this.rhi.gl.getExtension(ext);\n    return this._requireResult[ext];\n  }\n}\n","import { GLCapabilityType, Logger, Mesh, SubMesh } from \"@oasis-engine/core\";\nimport { IPlatformPrimitive } from \"@oasis-engine/design\";\nimport { WebGLExtension } from \"./type\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * Improvement of VAO:\n * 1) WebGL2.0 must support VAO, almost all devices support vao extensions in webgl1.0, we can use PollyFill,only keep VAO mode.\n * 2) VAO implementation now has bugs, change IndexBuffer、VertexBuffer、VertexElements need to update VAO.\n */\n\n/**\n * @internal\n * GL platform primitive.\n */\nexport class GLPrimitive implements IPlatformPrimitive {\n  protected attribLocArray: number[];\n  protected readonly _primitive: Mesh;\n  protected readonly canUseInstancedArrays: boolean;\n\n  private gl: (WebGLRenderingContext & WebGLExtension) | WebGL2RenderingContext;\n  private vao: Map<number, WebGLVertexArrayObject> = new Map();\n  private readonly _useVao: boolean;\n\n  constructor(rhi: WebGLRenderer, primitive: Mesh) {\n    this._primitive = primitive;\n    this.canUseInstancedArrays = rhi.canIUse(GLCapabilityType.instancedArrays);\n    this._useVao = rhi.canIUse(GLCapabilityType.vertexArrayObject);\n    this.gl = rhi.gl;\n  }\n\n  /**\n   * Draw the primitive.\n   */\n  draw(shaderProgram: any, subMesh: SubMesh): void {\n    const gl = this.gl;\n    const primitive = this._primitive;\n\n    if (this._useVao) {\n      if (!this.vao.has(shaderProgram.id)) {\n        this.registerVAO(shaderProgram);\n      }\n      const vao = this.vao.get(shaderProgram.id);\n      gl.bindVertexArray(vao);\n    } else {\n      this.bindBufferAndAttrib(shaderProgram);\n    }\n\n    // @ts-ignore\n    const { _indexBufferBinding, _instanceCount, _glIndexType, _glIndexByteCount } = primitive;\n    const { topology, start, count } = subMesh;\n\n    if (!_instanceCount) {\n      if (_indexBufferBinding) {\n        if (this._useVao) {\n          gl.drawElements(topology, count, _glIndexType, start * _glIndexByteCount);\n        } else {\n          const { _nativeBuffer } = _indexBufferBinding.buffer;\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _nativeBuffer);\n          gl.drawElements(topology, count, _glIndexType, start * _glIndexByteCount);\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        }\n      } else {\n        gl.drawArrays(topology, start, count);\n      }\n    } else {\n      if (this.canUseInstancedArrays) {\n        if (_indexBufferBinding) {\n          if (this._useVao) {\n            gl.drawElementsInstanced(topology, count, _glIndexType, start * _glIndexByteCount, _instanceCount);\n          } else {\n            const { _nativeBuffer } = _indexBufferBinding.buffer;\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _nativeBuffer);\n            gl.drawElementsInstanced(topology, count, _glIndexType, start * _glIndexByteCount, _instanceCount);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n          }\n        } else {\n          gl.drawArraysInstanced(topology, start, count, _instanceCount);\n        }\n      } else {\n        Logger.error(\"ANGLE_instanced_arrays extension is not supported\");\n      }\n    }\n\n    // unbind\n    if (this._useVao) {\n      gl.bindVertexArray(null);\n    } else {\n      this.disableAttrib();\n    }\n  }\n\n  destroy() {\n    if (this._useVao) {\n      const gl = this.gl;\n      this.vao.forEach((vao) => {\n        gl.deleteVertexArray(vao);\n      });\n      this.vao.clear();\n    }\n  }\n\n  /**\n   * Bind buffer and attribute.\n   */\n  protected bindBufferAndAttrib(shaderProgram: any): void {\n    const gl = this.gl;\n    const primitive = this._primitive;\n    // @ts-ignore\n    const vertexBufferBindings = primitive._vertexBufferBindings;\n\n    this.attribLocArray = [];\n    const attributeLocation = shaderProgram.attributeLocation;\n    const attributes = primitive._vertexElementMap;\n\n    let vbo: WebGLBuffer;\n    let lastBoundVbo: WebGLBuffer;\n\n    for (const name in attributeLocation) {\n      const loc = attributeLocation[name];\n      if (loc === -1) continue;\n\n      const element = attributes[name];\n      if (element) {\n        const { buffer, stride } = vertexBufferBindings[element.bindingIndex];\n        vbo = buffer._nativeBuffer;\n        // prevent binding the vbo which already bound at the last loop, e.g. a buffer with multiple attributes.\n        if (lastBoundVbo !== vbo) {\n          lastBoundVbo = vbo;\n          gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n        }\n\n        gl.enableVertexAttribArray(loc);\n        const { size, type, normalized } = element._glElementInfo;\n        gl.vertexAttribPointer(loc, size, type, normalized, stride, element.offset);\n        if (this.canUseInstancedArrays) {\n          gl.vertexAttribDivisor(loc, element.instanceStepRate);\n        }\n        this.attribLocArray.push(loc);\n      } else {\n        Logger.warn(\"vertex attribute not found: \" + name);\n      }\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n\n  protected disableAttrib() {\n    const gl = this.gl;\n    for (let i = 0, l = this.attribLocArray.length; i < l; i++) {\n      gl.disableVertexAttribArray(this.attribLocArray[i]);\n    }\n  }\n\n  private registerVAO(shaderProgram: any): void {\n    const gl = this.gl;\n    const vao = gl.createVertexArray();\n\n    /** register VAO */\n    gl.bindVertexArray(vao);\n\n    // @ts-ignore\n    const { _indexBufferBinding } = this._primitive;\n    if (_indexBufferBinding) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _indexBufferBinding.buffer._nativeBuffer);\n    }\n    this.bindBufferAndAttrib(shaderProgram);\n\n    /** unbind */\n    gl.bindVertexArray(null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    this.disableAttrib();\n\n    this.vao.set(shaderProgram.id, vao);\n  }\n}\n","import {\n  GLCapabilityType,\n  IPlatformTexture,\n  Logger,\n  RenderBufferColorFormat,\n  RenderBufferDepthFormat,\n  Texture,\n  TextureCubeFace,\n  TextureFilterMode,\n  TextureFormat,\n  TextureWrapMode\n} from \"@oasis-engine/core\";\nimport { GLCompressedTextureInternalFormat, TextureFormatDetail } from \"./type\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * Texture in WebGL platform.\n */\nexport class GLTexture implements IPlatformTexture {\n  /** @internal */\n  static _readFrameBuffer: WebGLFramebuffer = null;\n\n  /** @internal */\n  static _isPowerOf2(v: number): boolean {\n    return (v & (v - 1)) === 0;\n  }\n\n  /**\n   * Get more texture info from TextureFormat.\n   * @internal\n   */\n  static _getFormatDetail(\n    format: TextureFormat,\n    gl: WebGLRenderingContext & WebGL2RenderingContext,\n    isWebGL2: boolean\n  ): TextureFormatDetail {\n    switch (format) {\n      case TextureFormat.R8G8B8:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB8 : gl.RGB,\n          baseFormat: gl.RGB,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case TextureFormat.R8G8B8A8:\n        return {\n          internalFormat: isWebGL2 ? gl.RGBA8 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case TextureFormat.R4G4B4A4:\n        return {\n          internalFormat: isWebGL2 ? gl.RGBA4 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_SHORT_4_4_4_4,\n          isCompressed: false\n        };\n      case TextureFormat.R5G5B5A1:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB5_A1 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_SHORT_5_5_5_1,\n          isCompressed: false\n        };\n      case TextureFormat.R5G6B5:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB565 : gl.RGB,\n          baseFormat: gl.RGB,\n          dataType: gl.UNSIGNED_SHORT_5_6_5,\n          isCompressed: false\n        };\n      case TextureFormat.Alpha8:\n        return {\n          internalFormat: gl.ALPHA,\n          baseFormat: gl.ALPHA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case TextureFormat.LuminanceAlpha:\n        return {\n          internalFormat: gl.LUMINANCE_ALPHA,\n          baseFormat: gl.LUMINANCE_ALPHA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case TextureFormat.R32G32B32A32:\n        return {\n          internalFormat: gl.RGBA32F,\n          baseFormat: gl.RGBA,\n          dataType: gl.FLOAT,\n          isCompressed: false\n        };\n      case TextureFormat.DXT1:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_S3TC_DXT1_EXT,\n          isCompressed: true\n        };\n      case TextureFormat.DXT5:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_S3TC_DXT5_EXT,\n          isCompressed: true\n        };\n      case TextureFormat.ETC1_RGB:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_ETC1_WEBGL,\n          isCompressed: true\n        };\n      case TextureFormat.ETC2_RGB:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB8_ETC2,\n          isCompressed: true\n        };\n      case TextureFormat.ETC2_RGBA5:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n          isCompressed: true\n        };\n      case TextureFormat.ETC2_RGBA8:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA8_ETC2_EAC,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGB2:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_PVRTC_2BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGBA2:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_PVRTC_2BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGB4:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_PVRTC_4BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGBA4:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_PVRTC_4BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_4x4:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_4X4_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_5x5:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_5X5_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_6x6:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_6X6_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_8x8:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_8X8_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_10x10:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_10X10_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_12x12:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_12X12_KHR,\n          isCompressed: true\n        };\n      default:\n        throw new Error(`this TextureFormat is not supported in Oasis Engine: ${format}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static _getRenderBufferColorFormatDetail(\n    format: RenderBufferColorFormat,\n    gl: WebGLRenderingContext & WebGL2RenderingContext,\n    isWebGL2: boolean\n  ): TextureFormatDetail {\n    switch (format) {\n      case RenderBufferColorFormat.R8G8B8:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB8 : gl.RGB,\n          baseFormat: gl.RGB,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R8G8B8A8:\n        return {\n          internalFormat: isWebGL2 ? gl.RGBA8 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R4G4B4A4:\n        return {\n          internalFormat: isWebGL2 ? gl.RGBA4 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_SHORT_4_4_4_4,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R5G5B5A1:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB5_A1 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_SHORT_5_5_5_1,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R5G6B5:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB565 : gl.RGB,\n          baseFormat: gl.RGB,\n          dataType: gl.UNSIGNED_SHORT_5_6_5,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.Alpha8:\n        return {\n          internalFormat: gl.ALPHA,\n          baseFormat: gl.ALPHA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R16G16B16A16:\n        return {\n          internalFormat: gl.RGBA16F,\n          baseFormat: gl.RGBA,\n          dataType: gl.HALF_FLOAT,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R32G32B32A32:\n        return {\n          internalFormat: gl.RGBA32F,\n          baseFormat: gl.RGBA,\n          dataType: gl.FLOAT,\n          isCompressed: false\n        };\n      default:\n        throw new Error(`this RenderBufferColorFormat is not supported in Oasis Engine: ${format}`);\n    }\n  }\n\n  /**\n   * In WebGL 1, internalformat must be the same as baseFormat when call texImage2D.\n   * @internal\n   */\n  static _getRenderBufferDepthFormatDetail(\n    format: RenderBufferDepthFormat,\n    gl: WebGLRenderingContext & WebGL2RenderingContext,\n    isWebGL2: boolean\n  ): TextureFormatDetail {\n    switch (format) {\n      case RenderBufferDepthFormat.Depth:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH_COMPONENT32F : gl.DEPTH_COMPONENT16,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: isWebGL2 ? gl.FLOAT : gl.UNSIGNED_INT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.DepthStencil:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH24_STENCIL8 : gl.DEPTH_STENCIL,\n          baseFormat: gl.DEPTH_STENCIL,\n          dataType: gl.UNSIGNED_INT_24_8,\n          isCompressed: false,\n          attachment: gl.DEPTH_STENCIL_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Stencil:\n        return {\n          internalFormat: gl.STENCIL_INDEX8,\n          baseFormat: gl.STENCIL_ATTACHMENT,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false,\n          attachment: gl.STENCIL_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth16:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH_COMPONENT16 : gl.DEPTH_COMPONENT16,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: gl.UNSIGNED_INT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth24:\n        return {\n          internalFormat: gl.DEPTH_COMPONENT24,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: gl.UNSIGNED_INT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth32:\n        return {\n          internalFormat: gl.DEPTH_COMPONENT32F,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: gl.FLOAT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth24Stencil8:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH24_STENCIL8 : gl.DEPTH_STENCIL,\n          baseFormat: gl.DEPTH_STENCIL,\n          dataType: gl.UNSIGNED_INT_24_8,\n          isCompressed: false,\n          attachment: gl.DEPTH_STENCIL_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth32Stencil8:\n        return {\n          internalFormat: gl.DEPTH32F_STENCIL8,\n          baseFormat: gl.DEPTH_STENCIL,\n          dataType: gl.FLOAT_32_UNSIGNED_INT_24_8_REV,\n          isCompressed: false,\n          attachment: gl.DEPTH_STENCIL_ATTACHMENT\n        };\n      default:\n        throw new Error(`this RenderBufferDepthFormat is not supported in Oasis Engine: ${format}`);\n    }\n  }\n\n  /**\n   * Check whether the corresponding texture format is supported.\n   * @internal\n   */\n  static _supportTextureFormat(format: TextureFormat, rhi: WebGLRenderer): boolean {\n    let isSupported = true;\n\n    switch (format) {\n      case TextureFormat.R32G32B32A32:\n        {\n          if (!rhi.canIUse(GLCapabilityType.textureFloat)) {\n            isSupported = false;\n          }\n        }\n        break;\n    }\n\n    return isSupported;\n  }\n\n  /**\n   * @internal\n   */\n  static _supportRenderBufferColorFormat(format: RenderBufferColorFormat, rhi: WebGLRenderer): boolean {\n    let isSupported = true;\n\n    switch (format) {\n      case RenderBufferColorFormat.R32G32B32A32:\n        {\n          if (!rhi.canIUse(GLCapabilityType.colorBufferFloat) || !rhi.canIUse(GLCapabilityType.textureFloat)) {\n            isSupported = false;\n          }\n        }\n        break;\n      case RenderBufferColorFormat.R16G16B16A16:\n        {\n          if (!rhi.canIUse(GLCapabilityType.colorBufferHalfFloat) || !rhi.canIUse(GLCapabilityType.textureHalfFloat)) {\n            isSupported = false;\n          }\n        }\n        break;\n    }\n\n    return isSupported;\n  }\n\n  /**\n   * @internal\n   */\n  static _supportRenderBufferDepthFormat(\n    format: RenderBufferDepthFormat,\n    rhi: WebGLRenderer,\n    isTexture: boolean\n  ): boolean {\n    const isWebGL2: boolean = rhi.isWebGL2;\n    let isSupported = true;\n\n    if (isTexture && !rhi.canIUse(GLCapabilityType.depthTexture)) {\n      return false;\n    }\n\n    switch (format) {\n      case RenderBufferDepthFormat.Stencil:\n        {\n          isSupported = false;\n        }\n        break;\n      case RenderBufferDepthFormat.Depth24:\n      case RenderBufferDepthFormat.Depth32:\n      case RenderBufferDepthFormat.Depth32Stencil8:\n        {\n          if (!isWebGL2) {\n            isSupported = false;\n          }\n        }\n        break;\n    }\n\n    return isSupported;\n  }\n\n  /** @internal */\n  _texture: Texture;\n  /** @internal */\n  _glTexture: WebGLTexture;\n  /** @internal */\n  _rhi: WebGLRenderer;\n  /** @internal */\n  _gl: WebGLRenderingContext & WebGL2RenderingContext;\n  /** @internal */\n  _isWebGL2: boolean;\n  /** @internal */\n  _target: GLenum; // gl.TEXTURE_2D | gl.TEXTURE_CUBE_MAP\n  /** @internal */\n  _formatDetail: TextureFormatDetail;\n\n  /**\n   * Wrapping mode for texture coordinate S.\n   */\n  set wrapModeU(value: TextureWrapMode) {\n    this._bind();\n    this._setWrapMode(value, this._gl.TEXTURE_WRAP_S);\n  }\n\n  /**\n   * Wrapping mode for texture coordinate T.\n   */\n  set wrapModeV(value: TextureWrapMode) {\n    this._bind();\n    this._setWrapMode(value, this._gl.TEXTURE_WRAP_T);\n  }\n\n  /**\n   * Filter mode for texture.\n   */\n  set filterMode(value: TextureFilterMode) {\n    const gl = this._gl;\n    const target = this._target;\n    /** @ts-ignore */\n    const { _mipmap } = this._texture;\n\n    this._bind();\n    switch (value) {\n      case TextureFilterMode.Point:\n        gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, _mipmap ? gl.NEAREST_MIPMAP_NEAREST : gl.NEAREST);\n        break;\n      case TextureFilterMode.Bilinear:\n        gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, _mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR);\n        break;\n      case TextureFilterMode.Trilinear:\n        gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, _mipmap ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR);\n        break;\n    }\n  }\n\n  /**\n   * Anisotropic level for texture.\n   */\n  set anisoLevel(value: number) {\n    const gl = this._gl as WebGLRenderingContext & WebGL2RenderingContext & EXT_texture_filter_anisotropic;\n\n    this._bind();\n    gl.texParameterf(this._target, gl.TEXTURE_MAX_ANISOTROPY_EXT, value);\n  }\n\n  /**\n   * Create texture in WebGL platform.\n   */\n  constructor(rhi: WebGLRenderer, texture: Texture, target: GLenum) {\n    this._texture = texture;\n    this._rhi = rhi;\n    this._gl = rhi.gl as WebGLRenderingContext & WebGL2RenderingContext;\n    this._isWebGL2 = rhi.isWebGL2;\n    this._target = target;\n    this._glTexture = this._gl.createTexture();\n  }\n\n  /**\n   * Destroy texture.\n   */\n  destroy() {\n    this._gl.deleteTexture(this._glTexture);\n    this._texture = null;\n    this._glTexture = null;\n    this._formatDetail = null;\n  }\n\n  /**\n   * Generate multi-level textures based on the 0th level data.\n   */\n  generateMipmaps(): void {\n    this._bind();\n    this._gl.generateMipmap(this._target);\n  }\n\n  protected _bind() {\n    this._rhi.bindTexture(this);\n  }\n\n  /**\n   * Pre-development mipmapping GPU memory.\n   */\n  protected _initMipmap(isCube: boolean): void {\n    const gl = this._gl;\n    const isWebGL2 = this._isWebGL2;\n    let { internalFormat, baseFormat, dataType } = this._formatDetail;\n    const { mipmapCount, width, height } = this._texture;\n\n    this._bind();\n\n    if (isWebGL2 && !(baseFormat === gl.LUMINANCE_ALPHA || baseFormat === gl.ALPHA)) {\n      gl.texStorage2D(this._target, mipmapCount, internalFormat, width, height);\n    } else {\n      // In WebGL 1, internalformat must be the same as baseFormat\n      if (baseFormat !== internalFormat) {\n        internalFormat = baseFormat;\n      }\n\n      if (!isCube) {\n        for (let i = 0; i < mipmapCount; i++) {\n          const mipWidth = Math.max(1, width >> i);\n          const mipHeight = Math.max(1, height >> i);\n\n          gl.texImage2D(this._target, i, internalFormat, mipWidth, mipHeight, 0, baseFormat, dataType, null);\n        }\n      } else {\n        for (let i = 0; i < mipmapCount; i++) {\n          const size = Math.max(1, width >> i);\n          for (let faceIndex = 0; faceIndex < 6; faceIndex++) {\n            gl.texImage2D(\n              gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex,\n              i,\n              internalFormat,\n              size,\n              size,\n              0,\n              baseFormat,\n              dataType,\n              null\n            );\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the pixel color buffer according to the specified cube face and area.\n   * @param face - You can choose which cube face to read\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   * @param width - Area width\n   * @param height - Area height\n   * @param out - Color buffer\n   * @param mipLevel - Set mip level the data want to get from\n   */\n  protected _getPixelBuffer(\n    face: TextureCubeFace | null,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    mipLevel: number,\n    out: ArrayBufferView\n  ): void {\n    const gl = this._gl;\n    const { baseFormat, dataType } = this._formatDetail;\n\n    if (!GLTexture._readFrameBuffer) {\n      GLTexture._readFrameBuffer = gl.createFramebuffer();\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, GLTexture._readFrameBuffer);\n\n    if (mipLevel > 0 && !this._isWebGL2) {\n      mipLevel = 0;\n      Logger.error(\"mipLevel only take effect in WebGL2.0\");\n    }\n\n    if (face != null) {\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n        this._glTexture,\n        mipLevel\n      );\n    } else {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._glTexture, mipLevel);\n    }\n    gl.readPixels(x, y, width, height, baseFormat, dataType, out);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  private _setWrapMode(value: TextureWrapMode, pname: GLenum): void {\n    const gl = this._gl;\n    const isWebGL2 = this._isWebGL2;\n    const target = this._target;\n    const { width, height } = this._texture;\n\n    if (\n      !isWebGL2 &&\n      value !== TextureWrapMode.Clamp &&\n      (!GLTexture._isPowerOf2(width) || !GLTexture._isPowerOf2(height))\n    ) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for REPEAT or MIRRORED_REPEAT in WebGL1,and has automatically downgraded to CLAMP_TO_EDGE\"\n      );\n      value = TextureWrapMode.Clamp;\n    }\n\n    switch (value) {\n      case TextureWrapMode.Clamp:\n        gl.texParameteri(target, pname, gl.CLAMP_TO_EDGE);\n        break;\n      case TextureWrapMode.Repeat:\n        gl.texParameteri(target, pname, gl.REPEAT);\n        break;\n      case TextureWrapMode.Mirror:\n        gl.texParameteri(target, pname, gl.MIRRORED_REPEAT);\n        break;\n    }\n  }\n}\n","import {\n  IPlatformRenderColorTexture,\n  Logger,\n  RenderBufferColorFormat,\n  RenderColorTexture,\n  TextureCubeFace\n} from \"@oasis-engine/core\";\nimport { GLTexture } from \"./GLTexture\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * The texture in WebGL platform is used for the output of color information in off-screen rendering.\n */\nexport class GLRenderColorTexture extends GLTexture implements IPlatformRenderColorTexture {\n  /**\n   * Create render color texture in WebGL platform.\n   */\n  constructor(rhi: WebGLRenderer, texture: RenderColorTexture) {\n    super(rhi, texture, texture.isCube ? rhi.gl.TEXTURE_CUBE_MAP : rhi.gl.TEXTURE_2D);\n\n    /** @ts-ignore */\n    const { format, _mipmap, width, height, isCube } = texture;\n\n    const isWebGL2 = this._isWebGL2;\n\n    if (!GLTexture._supportRenderBufferColorFormat(format, rhi)) {\n      throw new Error(`RenderBufferColorFormat is not supported:${RenderBufferColorFormat[format]}`);\n    }\n\n    if (isCube && width !== height) {\n      throw new Error(\"The cube texture must have the same width and height\");\n    }\n\n    if (_mipmap && !isWebGL2 && (!GLTexture._isPowerOf2(width) || !GLTexture._isPowerOf2(height))) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for mipmap in WebGL1,and has automatically downgraded to non-mipmap\"\n      );\n\n      /** @ts-ignore */\n      texture._mipmap = false;\n      /** @ts-ignore */\n      texture._mipmapCount = texture._getMipmapCount();\n    }\n\n    this._formatDetail = GLTexture._getRenderBufferColorFormatDetail(format, this._gl, isWebGL2);\n    this._initMipmap(isCube);\n  }\n\n  /**\n   * Get the pixel color buffer according to the specified cube face and area.\n   * @param face - You can choose which cube face to read if it's cube texture\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   * @param width - Area width\n   * @param height - Area height\n   * @param mipLevel - Set mip level the data want to get from\n   * @param out - Color buffer\n   */\n  getPixelBuffer(\n    face: TextureCubeFace | null,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    mipLevel: number,\n    out: ArrayBufferView\n  ): void {\n    super._getPixelBuffer(face, x, y, width, height, mipLevel, out);\n  }\n}\n","import { IPlatformRenderDepthTexture, Logger, RenderBufferDepthFormat, RenderDepthTexture } from \"@oasis-engine/core\";\nimport { GLTexture } from \"./GLTexture\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * The texture in WebGL platform is used for the output of depth information in off-screen rendering.\n */\nexport class GLRenderDepthTexture extends GLTexture implements IPlatformRenderDepthTexture {\n  /**\n   * Create render depth texture in WebGL platform.\n   */\n  constructor(rhi: WebGLRenderer, texture: RenderDepthTexture) {\n    super(rhi, texture, texture.isCube ? rhi.gl.TEXTURE_CUBE_MAP : rhi.gl.TEXTURE_2D);\n\n    /** @ts-ignore */\n    const { format, _mipmap, width, height, isCube } = texture;\n    const isWebGL2 = this._isWebGL2;\n\n    if (!GLTexture._supportRenderBufferDepthFormat(format, rhi, true)) {\n      throw new Error(`RenderBufferDepthFormat is not supported:${RenderBufferDepthFormat[format]}`);\n    }\n\n    if (isCube && width !== height) {\n      throw new Error(\"The cube texture must have the same width and height\");\n    }\n\n    if (_mipmap && !isWebGL2 && (!GLTexture._isPowerOf2(width) || !GLTexture._isPowerOf2(height))) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for mipmap in WebGL1,and has automatically downgraded to non-mipmap\"\n      );\n\n      /** @ts-ignore */\n      texture._mipmap = false;\n      /** @ts-ignore */\n      texture._mipmapCount = texture._getMipmapCount();\n    }\n\n    this._formatDetail = GLTexture._getRenderBufferDepthFormatDetail(format, this._gl, isWebGL2);\n    this._initMipmap(isCube);\n  }\n}\n","/**\n * @private\n */\nexport class GLRenderStates {\n  private _gl: WebGLRenderingContext;\n  private _parameters = {};\n  /**\n   * @param {WebGLRenderingContext} gl\n   */\n  constructor(gl: WebGLRenderingContext) {\n    this._gl = gl;\n    this._parameters = {}; // current gl state parameters\n\n    /** cache */\n    this._parameters[gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS] = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this._parameters[gl.MAX_VERTEX_UNIFORM_VECTORS] = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n    this._parameters[gl.MAX_VERTEX_ATTRIBS] = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    this._parameters[gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS] = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n    this._parameters[gl.MAX_TEXTURE_SIZE] = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\n    // init blend state same as BlendState default value.\n    gl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\n    gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n    gl.colorMask(true, true, true, true);\n    gl.blendColor(0, 0, 0, 0);\n    gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\n    // init depth state same as DepthState default value.\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LESS);\n    gl.depthMask(true);\n\n    // init stencil state same as StencilState default value.\n    gl.disable(gl.STENCIL_TEST);\n    gl.stencilFuncSeparate(gl.FRONT, gl.ALWAYS, 0, 0xff);\n    gl.stencilFuncSeparate(gl.BACK, gl.ALWAYS, 0, 0xff);\n    gl.stencilOpSeparate(gl.FRONT, gl.KEEP, gl.KEEP, gl.KEEP);\n    gl.stencilOpSeparate(gl.BACK, gl.KEEP, gl.KEEP, gl.KEEP);\n    gl.stencilMask(0xff);\n\n    // init raster state same as RasterState default value.\n    gl.enable(gl.CULL_FACE);\n    gl.cullFace(gl.BACK);\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n    gl.polygonOffset(0, 0);\n  }\n\n  /**\n   * Get a parameter.\n   */\n  getParameter(pname) {\n    return this._parameters[pname];\n  }\n}\n","import {\n  GLCapabilityType,\n  IPlatformRenderTarget,\n  Logger,\n  RenderBufferDepthFormat,\n  RenderColorTexture,\n  RenderDepthTexture,\n  RenderTarget,\n  TextureCubeFace\n} from \"@oasis-engine/core\";\nimport { GLRenderColorTexture } from \"./GLRenderColorTexture\";\nimport { GLRenderDepthTexture } from \"./GLRenderDepthTexture\";\nimport { GLTexture } from \"./GLTexture\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * The render target in WebGL platform is used for off-screen rendering.\n */\nexport class GLRenderTarget implements IPlatformRenderTarget {\n  private _gl: WebGLRenderingContext & WebGL2RenderingContext;\n  private _isWebGL2: boolean;\n  private _target: RenderTarget;\n  private _frameBuffer: WebGLFramebuffer;\n  private _MSAAFrameBuffer: WebGLFramebuffer | null;\n  private _depthRenderBuffer: WebGLRenderbuffer | null;\n  private _MSAAColorRenderBuffers: WebGLRenderbuffer[] = [];\n  private _MSAADepthRenderBuffer: WebGLRenderbuffer | null;\n  private _oriDrawBuffers: GLenum[];\n  private _blitDrawBuffers: GLenum[] | null;\n  private _curMipLevel: number = 0;\n\n  /**\n   * Create render target in WebGL platform.\n   */\n  constructor(rhi: WebGLRenderer, target: RenderTarget) {\n    this._gl = rhi.gl as WebGLRenderingContext & WebGL2RenderingContext;\n    this._isWebGL2 = rhi.isWebGL2;\n    this._target = target;\n\n    /** @ts-ignore */\n    const { _colorTextures, _depth, width, height } = target;\n\n    /** todo\n     * MRT + Cube + [,MSAA]\n     * MRT + MSAA\n     */\n\n    if (!(_depth instanceof RenderDepthTexture) && !GLTexture._supportRenderBufferDepthFormat(_depth, rhi, false)) {\n      throw new Error(`RenderBufferDepthFormat is not supported:${RenderBufferDepthFormat[_depth]}`);\n    }\n\n    if (_colorTextures.length > 1 && !rhi.canIUse(GLCapabilityType.drawBuffers)) {\n      throw new Error(\"MRT is not supported\");\n    }\n\n    if (_colorTextures.some((v: RenderColorTexture) => v.width !== width || v.height !== height)) {\n      throw new Error(\"RenderColorTexture's size must as same as RenderTarget\");\n    }\n\n    if (_depth instanceof RenderDepthTexture && (_depth.width !== width || _depth.height !== height)) {\n      throw new Error(\"RenderDepthTexture's size must as same as RenderTarget\");\n    }\n\n    // todo: necessary to support MRT + Cube + [,MSAA] ?\n    if (_colorTextures.length > 1 && _colorTextures.some((v: RenderColorTexture) => v.isCube)) {\n      throw new Error(\"MRT+Cube+[,MSAA] is not supported\");\n    }\n\n    const maxAntiAliasing = rhi.capability.maxAntiAliasing;\n    if (target.antiAliasing > maxAntiAliasing) {\n      Logger.warn(`MSAA antiAliasing exceeds the limit and is automatically downgraded to:${maxAntiAliasing}`);\n\n      /** @ts-ignore */\n      target._antiAliasing = maxAntiAliasing;\n    }\n\n    this._frameBuffer = this._gl.createFramebuffer();\n\n    // bind main FBO\n    this._bindMainFBO();\n\n    // bind MSAA FBO\n    if (target.antiAliasing > 1) {\n      this._MSAAFrameBuffer = this._gl.createFramebuffer();\n      this._bindMSAAFBO();\n    }\n  }\n\n  /**\n   * Set which face and mipLevel of the cube texture to render to.\n   * @param faceIndex - Cube texture face\n   * @param mipLevel - Set mip level the data want to write\n   */\n  setRenderTargetInfo(faceIndex: TextureCubeFace, mipLevel: number): void {\n    const { _gl: gl, _target: target } = this;\n    const { depthTexture } = target;\n    const colorTexture = target.getColorTexture(0);\n    const mipChanged = mipLevel !== this._curMipLevel;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\n\n    if (colorTexture) {\n      const isCube = colorTexture.isCube;\n      if (mipChanged || isCube) {\n        gl.framebufferTexture2D(\n          gl.FRAMEBUFFER,\n          gl.COLOR_ATTACHMENT0,\n          isCube ? gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex : gl.TEXTURE_2D,\n          /** @ts-ignore */\n          (colorTexture._platformTexture as GLRenderColorTexture)._glTexture,\n          mipLevel\n        );\n      }\n    }\n    if (depthTexture) {\n      const isCube = depthTexture.isCube;\n      if (mipChanged || isCube) {\n        /** @ts-ignore */\n        const { _platformTexture: platformTexture } = depthTexture;\n        gl.framebufferTexture2D(\n          gl.FRAMEBUFFER,\n          platformTexture._formatDetail.attachment,\n          isCube ? gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex : gl.TEXTURE_2D,\n          platformTexture._glTexture,\n          mipLevel\n        );\n      }\n    } else {\n      if (mipChanged) {\n        // @ts-ignore\n        const { internalFormat } = GLTexture._getRenderBufferDepthFormatDetail(target._depth, gl, this._isWebGL2);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this._depthRenderBuffer);\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, target.width >> mipLevel, target.height >> mipLevel);\n      }\n    }\n    this._curMipLevel = mipLevel;\n\n    // revert current activated render target\n    this._activeRenderTarget();\n  }\n\n  /**\n   * Blit FBO.\n   */\n  blitRenderTarget(): void {\n    if (!this._MSAAFrameBuffer) return;\n\n    const gl = this._gl;\n    const mask = gl.COLOR_BUFFER_BIT | (this._target.depthTexture ? gl.DEPTH_BUFFER_BIT : 0);\n    const { colorTextureCount, width, height } = this._target;\n\n    gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this._MSAAFrameBuffer);\n    gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this._frameBuffer);\n\n    for (let textureIndex = 0; textureIndex < colorTextureCount; textureIndex++) {\n      const attachment = gl.COLOR_ATTACHMENT0 + textureIndex;\n\n      this._blitDrawBuffers[textureIndex] = attachment;\n\n      gl.readBuffer(attachment);\n      gl.drawBuffers(this._blitDrawBuffers);\n      gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, gl.NEAREST);\n\n      this._blitDrawBuffers[textureIndex] = gl.NONE;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  /**\n   * Destroy render target.\n   */\n  destroy(): void {\n    const gl = this._gl;\n\n    this._frameBuffer && gl.deleteFramebuffer(this._frameBuffer);\n    this._depthRenderBuffer && gl.deleteRenderbuffer(this._depthRenderBuffer);\n    this._MSAAFrameBuffer && gl.deleteFramebuffer(this._MSAAFrameBuffer);\n    this._MSAADepthRenderBuffer && gl.deleteRenderbuffer(this._MSAADepthRenderBuffer);\n\n    for (let i = 0; i < this._MSAAColorRenderBuffers.length; i++) {\n      gl.deleteRenderbuffer(this._MSAAColorRenderBuffers[i]);\n    }\n\n    this._frameBuffer = null;\n    this._depthRenderBuffer = null;\n    this._MSAAFrameBuffer = null;\n    this._MSAAColorRenderBuffers.length = 0;\n    this._MSAADepthRenderBuffer = null;\n  }\n\n  /**\n   * Activate this RenderTarget.\n   * @internal\n   * @remarks\n   * If MSAA is turned on, MSAA FBO is activated, and then this._blitRenderTarget() is performed to exchange FBO.\n   * If MSAA is not turned on, activate the main FBO.\n   */\n  _activeRenderTarget(): void {\n    const gl = this._gl;\n\n    if (this._MSAAFrameBuffer) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this._MSAAFrameBuffer);\n    } else {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\n    }\n  }\n\n  private _bindMainFBO(): void {\n    const gl = this._gl;\n    const isWebGL2: boolean = this._isWebGL2;\n\n    /** @ts-ignore */\n    const { _depth, colorTextureCount, width, height } = this._target;\n    const drawBuffers = new Array(colorTextureCount);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\n\n    /** color render buffer */\n    for (let i = 0; i < colorTextureCount; i++) {\n      const colorTexture = this._target.getColorTexture(i);\n      const attachment = gl.COLOR_ATTACHMENT0 + i;\n\n      drawBuffers[i] = attachment;\n\n      if (!colorTexture.isCube) {\n        gl.framebufferTexture2D(\n          gl.FRAMEBUFFER,\n          attachment,\n          gl.TEXTURE_2D,\n          /** @ts-ignore */\n          (colorTexture._platformTexture as GLRenderColorTexture)._glTexture,\n          0\n        );\n      }\n    }\n\n    if (colorTextureCount > 1) {\n      gl.drawBuffers(drawBuffers);\n    }\n    this._oriDrawBuffers = drawBuffers;\n\n    /** depth render buffer */\n    if (_depth !== null) {\n      if (_depth instanceof RenderDepthTexture) {\n        if (!_depth.isCube) {\n          gl.framebufferTexture2D(\n            gl.FRAMEBUFFER,\n            /** @ts-ignore */\n            (_depth._platformTexture as GLRenderDepthTexture)._formatDetail.attachment,\n            gl.TEXTURE_2D,\n            /** @ts-ignore */\n            (_depth._platformTexture as GLRenderDepthTexture)._glTexture,\n            0\n          );\n        }\n      } else if (this._target.antiAliasing <= 1) {\n        const { internalFormat, attachment } = GLTexture._getRenderBufferDepthFormatDetail(_depth, gl, isWebGL2);\n        const depthRenderBuffer = gl.createRenderbuffer();\n\n        this._depthRenderBuffer = depthRenderBuffer;\n\n        gl.bindRenderbuffer(gl.RENDERBUFFER, depthRenderBuffer);\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, depthRenderBuffer);\n      }\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  }\n\n  private _bindMSAAFBO(): void {\n    const gl = this._gl;\n    const isWebGL2 = this._isWebGL2;\n    const MSAADepthRenderBuffer = gl.createRenderbuffer();\n\n    /** @ts-ignore */\n    const { _depth, colorTextureCount, antiAliasing, width, height } = this._target;\n\n    this._blitDrawBuffers = new Array(colorTextureCount);\n    this._MSAADepthRenderBuffer = MSAADepthRenderBuffer;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._MSAAFrameBuffer);\n\n    // prepare MRT+MSAA color RBOs\n    for (let i = 0; i < colorTextureCount; i++) {\n      const MSAAColorRenderBuffer = gl.createRenderbuffer();\n\n      this._MSAAColorRenderBuffers[i] = MSAAColorRenderBuffer;\n      this._blitDrawBuffers[i] = gl.NONE;\n\n      gl.bindRenderbuffer(gl.RENDERBUFFER, MSAAColorRenderBuffer);\n      gl.renderbufferStorageMultisample(\n        gl.RENDERBUFFER,\n        antiAliasing,\n        /** @ts-ignore */\n        (this._target.getColorTexture(i)._platformTexture as GLRenderColorTexture)._formatDetail.internalFormat,\n        width,\n        height\n      );\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.RENDERBUFFER, MSAAColorRenderBuffer);\n    }\n    gl.drawBuffers(this._oriDrawBuffers);\n\n    // prepare MSAA depth RBO\n    if (_depth !== null) {\n      const { internalFormat, attachment } =\n        _depth instanceof RenderDepthTexture\n          ? /** @ts-ignore */\n            (_depth._platformTexture as GLRenderDepthTexture)._formatDetail\n          : GLTexture._getRenderBufferDepthFormatDetail(_depth, gl, isWebGL2);\n\n      gl.bindRenderbuffer(gl.RENDERBUFFER, MSAADepthRenderBuffer);\n      gl.renderbufferStorageMultisample(gl.RENDERBUFFER, antiAliasing, internalFormat, width, height);\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, MSAADepthRenderBuffer);\n    }\n\n    this._checkFrameBuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  }\n\n  private _checkFrameBuffer(): void {\n    const gl = this._gl;\n    const isWebGL2 = this._isWebGL2;\n    const e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n    switch (e) {\n      case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n        throw new Error(\n          \"The attachment types are mismatched or not all framebuffer attachment points are framebuffer attachment complete\"\n        );\n      case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n        throw new Error(\"There is no attachment\");\n      case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n        throw new Error(\" Height and width of the attachment are not the same.\");\n      case gl.FRAMEBUFFER_UNSUPPORTED:\n        throw new Error(\n          \"The format of the attachment is not supported or if depth and stencil attachments are not the same renderbuffer\"\n        );\n    }\n\n    if (isWebGL2 && e === gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE) {\n      throw new Error(\n        \"The values of gl.RENDERBUFFER_SAMPLES are different among attached renderbuffers, or are non-zero if the attached images are a mix of renderbuffers and textures.\"\n      );\n    }\n  }\n}\n","import { IPlatformTexture2D, Logger, Texture2D, TextureFormat } from \"@oasis-engine/core\";\nimport { GLTexture } from \"./GLTexture\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * Texture 2d in WebGL platform.\n */\nexport class GLTexture2D extends GLTexture implements IPlatformTexture2D {\n  /**\n   * Backward compatible with WebGL1.0.\n   */\n  private _compressedMipFilled: number = 0;\n\n  /**\n   * Create texture2D in WebGL platform.\n   */\n  constructor(rhi: WebGLRenderer, texture2D: Texture2D) {\n    super(rhi, texture2D, rhi.gl.TEXTURE_2D);\n\n    /** @ts-ignore */\n    const { format, _mipmap, width, height } = texture2D;\n    const isWebGL2 = this._isWebGL2;\n\n    if (!GLTexture._supportTextureFormat(format, rhi)) {\n      throw new Error(`Texture format is not supported:${TextureFormat[format]}`);\n    }\n\n    if (_mipmap && !isWebGL2 && (!GLTexture._isPowerOf2(width) || !GLTexture._isPowerOf2(height))) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for mipmap in WebGL1,and has automatically downgraded to non-mipmap\"\n      );\n\n      /** @ts-ignore */\n      texture2D._mipmap = false;\n      /** @ts-ignore */\n      texture2D._mipmapCount = texture2D._getMipmapCount();\n    }\n\n    this._formatDetail = GLTexture._getFormatDetail(format, this._gl, isWebGL2);\n    (this._formatDetail.isCompressed && !isWebGL2) || this._initMipmap(false);\n  }\n\n  /**\n   * Setting pixels data through color buffer data, designated area and texture mipmapping level,it's also applicable to compressed formats.\n   * @remarks If it is the WebGL1.0 platform and the texture format is compressed, the first upload must be filled with textures.\n   * @param colorBuffer - Color buffer data\n   * @param mipLevel - Texture mipmapping level\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   * @param width - Data width. if it's empty, width is the width corresponding to mipLevel minus x , width corresponding to mipLevel is Math.max(1, this.width >> mipLevel)\n   * @param height - Data height. if it's empty, height is the height corresponding to mipLevel minus y , height corresponding to mipLevel is Math.max(1, this.height >> mipLevel)\n   */\n  setPixelBuffer(\n    colorBuffer: ArrayBufferView,\n    mipLevel: number = 0,\n    x?: number,\n    y?: number,\n    width?: number,\n    height?: number\n  ): void {\n    const gl = this._gl;\n    const isWebGL2: boolean = this._isWebGL2;\n    const { internalFormat, baseFormat, dataType, isCompressed } = this._formatDetail;\n    const mipWidth = Math.max(1, this._texture.width >> mipLevel);\n    const mipHeight = Math.max(1, this._texture.height >> mipLevel);\n\n    x = x || 0;\n    y = y || 0;\n    width = width || mipWidth - x;\n    height = height || mipHeight - y;\n\n    this._bind();\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n\n    if (isCompressed) {\n      const mipBit = 1 << mipLevel;\n      if (isWebGL2 || this._compressedMipFilled & mipBit) {\n        gl.compressedTexSubImage2D(this._target, mipLevel, x, y, width, height, internalFormat, colorBuffer);\n      } else {\n        gl.compressedTexImage2D(this._target, mipLevel, internalFormat, width, height, 0, colorBuffer);\n        this._compressedMipFilled |= mipBit;\n      }\n    } else {\n      gl.texSubImage2D(this._target, mipLevel, x, y, width, height, baseFormat, dataType, colorBuffer);\n    }\n  }\n\n  /**\n   * Setting pixels data through TexImageSource, designated area and texture mipmapping level.\n   * @param imageSource - The source of texture\n   * @param mipLevel - Texture mipmapping level\n   * @param flipY - Whether to flip the Y axis\n   * @param premultiplyAlpha - Whether to premultiply the transparent channel\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   */\n  setImageSource(\n    imageSource: TexImageSource,\n    mipLevel: number = 0,\n    flipY: boolean = false,\n    premultiplyAlpha: boolean = false,\n    x?: number,\n    y?: number\n  ): void {\n    const gl = this._gl;\n    const { baseFormat, dataType } = this._formatDetail;\n\n    this._bind();\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, +flipY);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, +premultiplyAlpha);\n    gl.texSubImage2D(this._target, mipLevel, x || 0, y || 0, baseFormat, dataType, imageSource);\n  }\n\n  /**\n   * Get the pixel color buffer according to the specified area.\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   * @param width - Area width\n   * @param height - Area height\n   * @param mipLevel - Set mip level the data want to get from\n   * @param out - Color buffer\n   */\n  getPixelBuffer(x: number, y: number, width: number, height: number, mipLevel: number, out: ArrayBufferView): void {\n    if (this._formatDetail.isCompressed) {\n      throw new Error(\"Unable to read compressed texture\");\n    }\n    super._getPixelBuffer(null, x, y, width, height, mipLevel, out);\n  }\n}\n","import { IPlatformTextureCubeMap, Logger, TextureCubeFace, TextureCubeMap, TextureFormat } from \"@oasis-engine/core\";\nimport { GLTexture } from \"./GLTexture\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * Cube texture in WebGL platform.\n */\nexport class GLTextureCubeMap extends GLTexture implements IPlatformTextureCubeMap {\n  /**\n   * Backward compatible with WebGL1.0.。\n   */\n  private _compressedFaceFilled: number[] = [0, 0, 0, 0, 0, 0];\n\n  /**\n   * Create cube texture in WebGL platform.\n   */\n  constructor(rhi: WebGLRenderer, textureCube: TextureCubeMap) {\n    super(rhi, textureCube, rhi.gl.TEXTURE_CUBE_MAP);\n\n    /** @ts-ignore */\n    const { format, _mipmap, width: size } = textureCube;\n    const isWebGL2 = this._isWebGL2;\n\n    if (!GLTexture._supportTextureFormat(format, rhi)) {\n      throw new Error(`Texture format is not supported:${TextureFormat[format]}`);\n    }\n\n    if (_mipmap && !isWebGL2 && !GLTexture._isPowerOf2(size)) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for mipmap in WebGL1,and has automatically downgraded to non-mipmap\"\n      );\n\n      /** @ts-ignore */\n      textureCube._mipmap = false;\n      /** @ts-ignore */\n      textureCube._mipmapCount = textureCube._getMipmapCount();\n    }\n\n    this._formatDetail = GLTexture._getFormatDetail(format, this._gl, isWebGL2);\n    (this._formatDetail.isCompressed && !isWebGL2) || this._initMipmap(true);\n  }\n\n  /**\n   * Setting pixels data through cube face,color buffer data, designated area and texture mipmapping level,it's also applicable to compressed formats.\n   * @remarks When compressed texture is in WebGL1, the texture must be filled first before writing the sub-region\n   * @param face - Cube face\n   * @param colorBuffer - Color buffer data\n   * @param mipLevel - Texture mipmapping level\n   * @param x - X coordinate of area start\n   * @param y -  Y coordinate of area start\n   * @param width - Data width.if it's empty, width is the width corresponding to mipLevel minus x , width corresponding to mipLevel is Math.max(1, this.width >> mipLevel)\n   * @param height - Data height.if it's empty, height is the height corresponding to mipLevel minus y , height corresponding to mipLevel is Math.max(1, this.height >> mipLevel)\n   */\n  setPixelBuffer(\n    face: TextureCubeFace,\n    colorBuffer: ArrayBufferView,\n    mipLevel: number = 0,\n    x?: number,\n    y?: number,\n    width?: number,\n    height?: number\n  ): void {\n    const gl = this._gl;\n    const isWebGL2 = this._isWebGL2;\n    const { internalFormat, baseFormat, dataType, isCompressed } = this._formatDetail;\n    const mipSize = Math.max(1, this._texture.width >> mipLevel);\n\n    x = x || 0;\n    y = y || 0;\n    width = width || mipSize - x;\n    height = height || mipSize - y;\n\n    this._bind();\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n\n    if (isCompressed) {\n      const mipBit = 1 << mipLevel;\n      if (isWebGL2 || this._compressedFaceFilled[face] & mipBit) {\n        gl.compressedTexSubImage2D(\n          gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n          mipLevel,\n          x,\n          y,\n          width,\n          height,\n          internalFormat,\n          colorBuffer\n        );\n      } else {\n        gl.compressedTexImage2D(\n          gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n          mipLevel,\n          internalFormat,\n          width,\n          height,\n          0,\n          colorBuffer\n        );\n        this._compressedFaceFilled[face] |= mipBit;\n      }\n    } else {\n      gl.texSubImage2D(\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n        mipLevel,\n        x,\n        y,\n        width,\n        height,\n        baseFormat,\n        dataType,\n        colorBuffer\n      );\n    }\n  }\n\n  /**\n   * Setting pixels data through cube face, TexImageSource, designated area and texture mipmapping level.\n   * @param face - Cube face\n   * @param imageSource - The source of texture\n   * @param mipLevel - Texture mipmapping level\n   * @param flipY - Whether to flip the Y axis\n   * @param premultiplyAlpha - Whether to premultiply the transparent channel\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   */\n  setImageSource(\n    face: TextureCubeFace,\n    imageSource: TexImageSource,\n    mipLevel: number = 0,\n    flipY: boolean = false,\n    premultiplyAlpha: boolean = false,\n    x?: number,\n    y?: number\n  ): void {\n    const gl = this._gl;\n    const { baseFormat, dataType } = this._formatDetail;\n\n    this._bind();\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, +flipY);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, +premultiplyAlpha);\n    gl.texSubImage2D(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n      mipLevel,\n      x || 0,\n      y || 0,\n      baseFormat,\n      dataType,\n      imageSource\n    );\n  }\n\n  /**\n   * Get the pixel color buffer according to the specified cube face and area.\n   * @param face - You can choose which cube face to read\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   * @param width - Area width\n   * @param height - Area height\n   * @param mipLevel - Set mip level the data want to get from\n   * @param out - Color buffer\n   */\n  getPixelBuffer(\n    face: TextureCubeFace,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    mipLevel: number,\n    out: ArrayBufferView\n  ): void {\n    if (this._formatDetail.isCompressed) {\n      throw new Error(\"Unable to read compressed texture\");\n    }\n    super._getPixelBuffer(face, x, y, width, height, mipLevel, out);\n  }\n}\n","import {\n  Camera, CameraClearFlags, Canvas,\n  ColorWriteMask,\n  Engine,\n  GLCapabilityType,\n  IHardwareRenderer,\n  IPlatformRenderColorTexture,\n  IPlatformRenderDepthTexture,\n  IPlatformRenderTarget,\n  IPlatformTexture2D,\n  IPlatformTextureCubeMap,\n  Logger,\n  Mesh,\n  RenderColorTexture,\n  RenderDepthTexture,\n  RenderTarget,\n  SubMesh,\n  Texture2D,\n  TextureCubeMap\n} from \"@oasis-engine/core\";\nimport { IPlatformPrimitive } from \"@oasis-engine/design\";\nimport { Color, Vector4 } from \"@oasis-engine/math\";\nimport { GLCapability } from \"./GLCapability\";\nimport { GLExtensions } from \"./GLExtensions\";\nimport { GLPrimitive } from \"./GLPrimitive\";\nimport { GLRenderColorTexture } from \"./GLRenderColorTexture\";\nimport { GLRenderDepthTexture } from \"./GLRenderDepthTexture\";\nimport { GLRenderStates } from \"./GLRenderStates\";\nimport { GLRenderTarget } from \"./GLRenderTarget\";\nimport { GLTexture } from \"./GLTexture\";\nimport { GLTexture2D } from \"./GLTexture2D\";\nimport { GLTextureCubeMap } from \"./GLTextureCubeMap\";\nimport { WebGLExtension } from \"./type\";\nimport { WebCanvas } from \"./WebCanvas\";\n\n/**\n * WebGL mode.\n */\nexport enum WebGLMode {\n  /** Auto, use WebGL2.0 if support, or will fallback to WebGL1.0. */\n  Auto = 0,\n  /** WebGL2.0. */\n  WebGL2 = 1,\n  /** WebGL1.0, */\n  WebGL1 = 2\n}\n\n/**\n * WebGL renderer options.\n */\nexport interface WebGLRendererOptions extends WebGLContextAttributes {\n  /** WebGL mode.*/\n  webGLMode?: WebGLMode;\n}\n\n/**\n * WebGL renderer, including WebGL1.0 and WebGL2.0.\n */\nexport class WebGLRenderer implements IHardwareRenderer {\n  _currentBind: any;\n\n  private _options: WebGLRendererOptions;\n  private _gl: (WebGLRenderingContext & WebGLExtension) | WebGL2RenderingContext;\n  private _renderStates;\n  private _extensions;\n  private _capability: GLCapability;\n  private _isWebGL2: boolean;\n\n  private _activeTextureID: number;\n  private _activeTextures: GLTexture[] = new Array(32);\n\n  // cache value\n  private _lastViewport: Vector4 = new Vector4(null, null, null, null);\n  private _lastClearColor: Color = new Color(null, null, null, null);\n\n  get isWebGL2() {\n    return this._isWebGL2;\n  }\n\n  /**\n   * GL Context\n   * @member {WebGLRenderingContext}\n   */\n  get gl() {\n    return this._gl;\n  }\n\n  get renderStates(): GLRenderStates {\n    return this._renderStates;\n  }\n\n  get capability(): GLCapability {\n    return this._capability;\n  }\n\n  get canIUseMoreJoints() {\n    return this.capability.canIUseMoreJoints;\n  }\n\n  constructor(options: WebGLRendererOptions = {}) {\n    this._options = options;\n  }\n\n  init(canvas: Canvas) {\n    const option = this._options;\n    option.alpha === undefined && (option.alpha = false);\n    option.stencil === undefined && (option.stencil = true);\n\n    const webCanvas = (canvas as WebCanvas)._webCanvas;\n    const webGLMode = option.webGLMode || WebGLMode.Auto;\n    let gl: (WebGLRenderingContext & WebGLExtension) | WebGL2RenderingContext;\n\n    if (webGLMode == WebGLMode.Auto || webGLMode == WebGLMode.WebGL2) {\n      gl = webCanvas.getContext(\"webgl2\", option);\n      if (!gl && webCanvas instanceof HTMLCanvasElement) {\n        gl = <WebGL2RenderingContext>webCanvas.getContext(\"experimental-webgl2\", option);\n      }\n      this._isWebGL2 = true;\n\n      // Prevent weird browsers to lie (such as safari!)\n      if (gl && !(<WebGL2RenderingContext>gl).deleteQuery) {\n        this._isWebGL2 = false;\n      }\n    }\n\n    if (!gl) {\n      if (webGLMode == WebGLMode.Auto || webGLMode == WebGLMode.WebGL1) {\n        gl = <WebGLRenderingContext & WebGLExtension>webCanvas.getContext(\"webgl\", option);\n        if (!gl && webCanvas instanceof HTMLCanvasElement) {\n          gl = <WebGLRenderingContext & WebGLExtension>webCanvas.getContext(\"experimental-webgl\", option);\n        }\n        this._isWebGL2 = false;\n      }\n    }\n\n    if (!gl) {\n      throw new Error(\"Get GL Context FAILED.\");\n    }\n\n    this._gl = gl;\n    this._activeTextureID = gl.TEXTURE0;\n    this._renderStates = new GLRenderStates(gl);\n    this._extensions = new GLExtensions(this);\n    this._capability = new GLCapability(this);\n    // Make sure the active texture in gl context is on default, because gl context may be used in other webgl renderer.\n    gl.activeTexture(gl.TEXTURE0);\n\n    this._options = null;\n  }\n\n  createPlatformPrimitive(primitive: Mesh): IPlatformPrimitive {\n    return new GLPrimitive(this, primitive);\n  }\n\n  createPlatformTexture2D(texture2D: Texture2D): IPlatformTexture2D {\n    return new GLTexture2D(this, texture2D);\n  }\n\n  createPlatformTextureCubeMap(textureCube: TextureCubeMap): IPlatformTextureCubeMap {\n    return new GLTextureCubeMap(this, textureCube);\n  }\n\n  createPlatformRenderColorTexture(texture: RenderColorTexture): IPlatformRenderColorTexture {\n    return new GLRenderColorTexture(this, texture);\n  }\n\n  createPlatformRenderDepthTexture(texture: RenderDepthTexture): IPlatformRenderDepthTexture {\n    return new GLRenderDepthTexture(this, texture);\n  }\n\n  createPlatformRenderTarget(target: RenderTarget): IPlatformRenderTarget {\n    return new GLRenderTarget(this, target);\n  }\n\n  requireExtension(ext) {\n    return this._extensions.requireExtension(ext);\n  }\n\n  canIUse(capabilityType: GLCapabilityType) {\n    return this.capability.canIUse(capabilityType);\n  }\n\n  canIUseCompressedTextureInternalFormat(type: number) {\n    return this.capability.canIUseCompressedTextureInternalFormat(type);\n  }\n\n  viewport(x: number, y: number, width: number, height: number): void {\n    // gl.enable(gl.SCISSOR_TEST);\n    // gl.scissor(x, transformY, width, height);\n    const gl = this._gl;\n    const lv = this._lastViewport;\n\n    if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\n      gl.viewport(x, y, width, height);\n      lv.setValue(x, y, width, height);\n    }\n  }\n\n  colorMask(r, g, b, a) {\n    this._gl.colorMask(r, g, b, a);\n  }\n\n  clearRenderTarget(\n    engine: Engine,\n    clearFlags: CameraClearFlags.Depth | CameraClearFlags.DepthColor,\n    clearColor: Color\n  ) {\n    const gl = this._gl;\n    const {\n      blendState: { targetBlendState },\n      depthState,\n      stencilState\n    } = engine._lastRenderState;\n\n    let clearFlag = gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT;\n\n    if (clearFlags === CameraClearFlags.DepthColor) {\n      clearFlag |= gl.COLOR_BUFFER_BIT;\n\n      const lc = this._lastClearColor;\n      const { r, g, b, a } = clearColor;\n\n      if (clearColor && (r !== lc.r || g !== lc.g || b !== lc.b || a !== lc.a)) {\n        gl.clearColor(r, g, b, a);\n        lc.setValue(r, g, b, a);\n      }\n\n      if (targetBlendState.colorWriteMask !== ColorWriteMask.All) {\n        gl.colorMask(true, true, true, true);\n        targetBlendState.colorWriteMask = ColorWriteMask.All;\n      }\n    }\n\n    if (depthState.writeEnabled !== true) {\n      gl.depthMask(true);\n      depthState.writeEnabled = true;\n    }\n\n    if (stencilState.writeMask !== 0xff) {\n      gl.stencilMask(0xff);\n      stencilState.writeMask = 0xff;\n    }\n\n    gl.clear(clearFlag);\n  }\n\n  drawPrimitive(primitive: Mesh, subPrimitive: SubMesh, shaderProgram: any) {\n    // todo: VAO not support morph animation\n    if (primitive) {\n      //@ts-ignore\n      primitive._draw(shaderProgram, subPrimitive);\n    } else {\n      Logger.error(\"draw primitive failed.\");\n    }\n  }\n\n  activeRenderTarget(renderTarget: RenderTarget, camera: Camera, mipLevel: number) {\n    const gl = this._gl;\n    if (renderTarget) {\n      /** @ts-ignore */\n      (renderTarget._platformRenderTarget as GLRenderTarget)?._activeRenderTarget();\n      const { width, height } = renderTarget;\n      this.viewport(0, 0, width >> mipLevel, height >> mipLevel);\n    } else {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      const viewport = camera.viewport;\n      const { drawingBufferWidth, drawingBufferHeight } = gl;\n      const width = drawingBufferWidth * viewport.z;\n      const height = drawingBufferHeight * viewport.w;\n      const x = viewport.x * drawingBufferWidth;\n      const y = drawingBufferHeight - viewport.y * drawingBufferHeight - height;\n      this.viewport(x, y, width, height);\n    }\n  }\n\n  destroy() {}\n\n  activeTexture(textureID: number): void {\n    if (this._activeTextureID !== textureID) {\n      this._gl.activeTexture(textureID);\n      this._activeTextureID = textureID;\n    }\n  }\n\n  bindTexture(texture: GLTexture): void {\n    const index = this._activeTextureID - this._gl.TEXTURE0;\n    if (this._activeTextures[index] !== texture) {\n      this._gl.bindTexture(texture._target, texture._glTexture);\n      this._activeTextures[index] = texture;\n    }\n  }\n}\n","import { Engine } from \"@oasis-engine/core\";\nimport { WebCanvas } from \"./WebCanvas\";\nimport { WebGLRenderer, WebGLRendererOptions } from \"./WebGLRenderer\";\nimport { IPhysics } from \"@oasis-engine/design\";\n\ntype OffscreenCanvas = any;\n\n/**\n * WebGL platform engine,support includes WebGL1.0 and WebGL2.0.\n */\nexport class WebGLEngine extends Engine {\n  /**\n   * Create an engine suitable for the WebGL platform.\n   * @param canvas - Native web canvas\n   * @param physics - Physics Engine\n   * @param webGLRendererOptions - WebGL renderer options\n   */\n  constructor(\n    canvas: string | HTMLCanvasElement | OffscreenCanvas,\n    physics?: IPhysics,\n    webGLRendererOptions?: WebGLRendererOptions\n  ) {\n    const webCanvas = new WebCanvas(\n      <HTMLCanvasElement | OffscreenCanvas>(typeof canvas === \"string\" ? document.getElementById(canvas) : canvas)\n    );\n    const hardwareRenderer = new WebGLRenderer(webGLRendererOptions);\n    super(webCanvas, hardwareRenderer, physics);\n  }\n\n  /**\n   * Web canvas.\n   */\n  get canvas(): WebCanvas {\n    return this._canvas as WebCanvas;\n  }\n}\n"],"names":["GLCompressedTextureInternalFormat","WebCanvas","resizeByClientSize","pixelRatio","window","devicePixelRatio","webCanvas","_webCanvas","HTMLCanvasElement","width","clientWidth","height","clientHeight","_width","_height","_scale","Vector2","setScale","x","y","setValue","scale","value","style","transformOrigin","transform","GLCapability","rhi","_maxDrawBuffers","_maxAnisoLevel","_maxAntiAliasing","_rhi","capabilityList","Map","_init","_compatibleAllInterface","canIUse","capabilityType","get","canIUseCompressedTextureInternalFormat","internalType","RGBA_ASTC_4X4_KHR","RGBA_ASTC_12X12_KHR","SRGB8_ALPHA8_ASTC_4X4_KHR","SRGB8_ALPHA8_ASTC_12X12_KHR","RGB_ETC1_WEBGL","R11_EAC","SRGB8_ALPHA8_ETC2_EAC","RGB_PVRTC_4BPPV1_IMG","RGBA_PVRTC_2BPPV1_IMG","RGB_S3TC_DXT1_EXT","RGBA_S3TC_DXT5_EXT","GLCapabilityType","astc","etc1","etc","pvrtc","s3tc","cap","isWebGL2","requireExtension","bind","shaderVertexID","standardDerivatives","shaderTextureLod","elementIndexUint","depthTexture","vertexArrayObject","instancedArrays","multipleSample","drawBuffers","astc_webkit","etc_webkit","etc1_webkit","pvrtc_webkit","s3tc_webkit","textureFloat","textureHalfFloat","textureFloatLinear","textureHalfFloatLinear","WEBGL_colorBufferFloat","colorBufferFloat","colorBufferHalfFloat","textureFilterAnisotropic","set","_compatibleInterface","flatItem","gl","ext","glKey","extensionKey","extensionVal","UNSIGNED_INT_24_8","createVertexArray","deleteVertexArray","isVertexArray","bindVertexArray","drawArraysInstanced","drawElementsInstanced","vertexAttribDivisor","MAX_DRAW_BUFFERS","items","maxDrawBuffers","i","HAFL_FLOAT","RGBA16F","RGBA32F","TEXTURE_MAX_ANISOTROPY_EXT","renderStates","getParameter","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_MAX_ANISOTROPY_EXT","canMSAA","MAX_SAMPLES","GLExtensions","_requireResult","undefined","getExtension","GLPrimitive","primitive","attribLocArray","_primitive","canUseInstancedArrays","vao","_useVao","draw","shaderProgram","subMesh","has","id","registerVAO","bindBufferAndAttrib","_indexBufferBinding","_instanceCount","_glIndexType","_glIndexByteCount","topology","start","count","drawElements","_nativeBuffer","buffer","bindBuffer","ELEMENT_ARRAY_BUFFER","drawArrays","Logger","error","disableAttrib","destroy","forEach","clear","vertexBufferBindings","_vertexBufferBindings","attributeLocation","attributes","_vertexElementMap","vbo","lastBoundVbo","name","loc","element","bindingIndex","stride","ARRAY_BUFFER","enableVertexAttribArray","_glElementInfo","size","type","normalized","vertexAttribPointer","offset","instanceStepRate","push","warn","l","length","disableVertexAttribArray","GLTexture","_isPowerOf2","v","_getFormatDetail","format","TextureFormat","R8G8B8","internalFormat","RGB8","RGB","baseFormat","dataType","UNSIGNED_BYTE","isCompressed","R8G8B8A8","RGBA8","RGBA","R4G4B4A4","RGBA4","UNSIGNED_SHORT_4_4_4_4","R5G5B5A1","RGB5_A1","UNSIGNED_SHORT_5_5_5_1","R5G6B5","RGB565","UNSIGNED_SHORT_5_6_5","Alpha8","ALPHA","LuminanceAlpha","LUMINANCE_ALPHA","R32G32B32A32","FLOAT","DXT1","DXT5","ETC1_RGB","ETC2_RGB","RGB8_ETC2","ETC2_RGBA5","RGB8_PUNCHTHROUGH_ALPHA1_ETC2","ETC2_RGBA8","RGBA8_ETC2_EAC","PVRTC_RGB2","RGB_PVRTC_2BPPV1_IMG","PVRTC_RGBA2","PVRTC_RGB4","PVRTC_RGBA4","RGBA_PVRTC_4BPPV1_IMG","ASTC_4x4","ASTC_5x5","RGBA_ASTC_5X5_KHR","ASTC_6x6","RGBA_ASTC_6X6_KHR","ASTC_8x8","RGBA_ASTC_8X8_KHR","ASTC_10x10","RGBA_ASTC_10X10_KHR","ASTC_12x12","Error","_getRenderBufferColorFormatDetail","RenderBufferColorFormat","R16G16B16A16","HALF_FLOAT","_getRenderBufferDepthFormatDetail","RenderBufferDepthFormat","Depth","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_COMPONENT","UNSIGNED_INT","attachment","DEPTH_ATTACHMENT","DepthStencil","DEPTH24_STENCIL8","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","Stencil","STENCIL_INDEX8","STENCIL_ATTACHMENT","Depth16","Depth24","DEPTH_COMPONENT24","Depth32","Depth24Stencil8","Depth32Stencil8","DEPTH32F_STENCIL8","FLOAT_32_UNSIGNED_INT_24_8_REV","_supportTextureFormat","isSupported","_supportRenderBufferColorFormat","_supportRenderBufferDepthFormat","isTexture","texture","target","_texture","_glTexture","_gl","_isWebGL2","_target","_formatDetail","createTexture","deleteTexture","generateMipmaps","_bind","generateMipmap","bindTexture","_initMipmap","isCube","mipmapCount","texStorage2D","mipWidth","Math","max","mipHeight","texImage2D","faceIndex","TEXTURE_CUBE_MAP_POSITIVE_X","_getPixelBuffer","face","mipLevel","out","_readFrameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","readPixels","_setWrapMode","pname","TextureWrapMode","Clamp","texParameteri","CLAMP_TO_EDGE","Repeat","REPEAT","Mirror","MIRRORED_REPEAT","TEXTURE_WRAP_S","TEXTURE_WRAP_T","_mipmap","TextureFilterMode","Point","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","NEAREST_MIPMAP_NEAREST","Bilinear","LINEAR","LINEAR_MIPMAP_NEAREST","Trilinear","LINEAR_MIPMAP_LINEAR","texParameterf","GLRenderColorTexture","TEXTURE_CUBE_MAP","_mipmapCount","_getMipmapCount","getPixelBuffer","GLRenderDepthTexture","GLRenderStates","_parameters","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VERTEX_ATTRIBS","MAX_TEXTURE_SIZE","blendFuncSeparate","ONE","ZERO","blendEquationSeparate","FUNC_ADD","colorMask","blendColor","disable","SAMPLE_ALPHA_TO_COVERAGE","enable","DEPTH_TEST","depthFunc","LESS","depthMask","STENCIL_TEST","stencilFuncSeparate","FRONT","ALWAYS","BACK","stencilOpSeparate","KEEP","stencilMask","CULL_FACE","cullFace","POLYGON_OFFSET_FILL","polygonOffset","GLRenderTarget","_frameBuffer","_MSAAFrameBuffer","_depthRenderBuffer","_MSAAColorRenderBuffers","_MSAADepthRenderBuffer","_oriDrawBuffers","_blitDrawBuffers","_curMipLevel","_colorTextures","_depth","RenderDepthTexture","some","maxAntiAliasing","capability","antiAliasing","_antiAliasing","_bindMainFBO","_bindMSAAFBO","setRenderTargetInfo","colorTexture","getColorTexture","mipChanged","_platformTexture","platformTexture","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","_activeRenderTarget","blitRenderTarget","mask","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","colorTextureCount","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","textureIndex","readBuffer","blitFramebuffer","NONE","deleteFramebuffer","deleteRenderbuffer","Array","depthRenderBuffer","createRenderbuffer","framebufferRenderbuffer","MSAADepthRenderBuffer","MSAAColorRenderBuffer","renderbufferStorageMultisample","_checkFrameBuffer","e","checkFramebufferStatus","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","GLTexture2D","texture2D","_compressedMipFilled","setPixelBuffer","colorBuffer","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","mipBit","compressedTexSubImage2D","compressedTexImage2D","texSubImage2D","setImageSource","imageSource","flipY","premultiplyAlpha","GLTextureCubeMap","textureCube","_compressedFaceFilled","mipSize","WebGLMode","WebGLRenderer","options","_currentBind","_options","_renderStates","_extensions","_capability","_activeTextureID","_activeTextures","_lastViewport","Vector4","_lastClearColor","Color","init","canvas","option","alpha","stencil","webGLMode","Auto","WebGL2","getContext","deleteQuery","WebGL1","TEXTURE0","activeTexture","createPlatformPrimitive","createPlatformTexture2D","createPlatformTextureCubeMap","createPlatformRenderColorTexture","createPlatformRenderDepthTexture","createPlatformRenderTarget","viewport","lv","z","w","r","g","b","a","clearRenderTarget","engine","clearFlags","clearColor","_lastRenderState","targetBlendState","blendState","depthState","stencilState","clearFlag","STENCIL_BUFFER_BIT","CameraClearFlags","DepthColor","lc","colorWriteMask","ColorWriteMask","All","writeEnabled","writeMask","drawPrimitive","subPrimitive","_draw","activeRenderTarget","renderTarget","camera","_platformRenderTarget","drawingBufferWidth","drawingBufferHeight","textureID","index","canIUseMoreJoints","WebGLEngine","physics","webGLRendererOptions","document","getElementById","hardwareRenderer","_canvas","Engine"],"mappings":"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"}